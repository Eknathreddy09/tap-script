apiVersion: apps/v1
kind: Deployment
metadata:
  name: acme-catalog
  annotations:
    kapp.k14s.io/update-strategy: fallback-on-replace
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: acme-fitness-store
    apps.tanzu.vmware.com/has-tests: "false"
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/component: run
    carto.run/workload-name: acme-catalog
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: run
      app.kubernetes.io/part-of: acme-fitness-store
      apps.tanzu.vmware.com/auto-configure-actuators: "false"
      apps.tanzu.vmware.com/has-tests: "false"
      apps.tanzu.vmware.com/workload-type: server
      carto.run/workload-name: acme-catalog
      conventions.carto.run/framework: spring-boot
      services.conventions.carto.run/postgres: workload
      tanzu.app.live.view: "true"
      tanzu.app.live.view.application.actuator.path: actuator
      tanzu.app.live.view.application.actuator.port: "8080"
      tanzu.app.live.view.application.flavours: spring-boot
      tanzu.app.live.view.application.name: acme-catalog
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "1"
        boot.spring.io/version: 2.6.6
        conventions.carto.run/applied-conventions: |-
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-graceful-shutdown
          spring-boot-convention/spring-boot-web
          spring-boot-convention/spring-boot-actuator
          spring-boot-convention/spring-boot-actuator-probes
          spring-boot-convention/app-live-view-appflavour-check
          spring-boot-convention/app-live-view-connector-boot
          spring-boot-convention/app-live-view-appflavours-boot
          spring-boot-convention/service-intent-postgres
          appliveview-sample/app-live-view-appflavour-check
        developer.conventions/target-containers: workload
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"annotations":{},"labels":{"app.kubernetes.io/part-of":"acme-fitness-store","apps.tanzu.vmware.com/has-tests":"false","apps.tanzu.vmware.com/workload-type":"server"},"name":"acme-catalog","namespace":"tap-workload"},"spec":{"env":[{"name":"spring.mvc.static-path-pattern","value":"/static/images/**"},{"name":"spring.web.resources.cache.cachecontrol.max-age","value":"3600"},{"name":"spring.web.resources.cache.cachecontrol.cache-public","value":"true"}],"params":[{"name":"annotations","value":{"autoscaling.knative.dev/minScale":"1"}},{"name":"ports","value":[{"containerPort":8080,"name":"http","port":80}]}],"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/gm2552/acme-fitness-store"},"subPath":"apps/acme-catalog"}}}
        services.conventions.carto.run/postgres: postgresql/42.3.3
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: acme-fitness-store
        apps.tanzu.vmware.com/auto-configure-actuators: "false"
        apps.tanzu.vmware.com/has-tests: "false"
        apps.tanzu.vmware.com/workload-type: server
        carto.run/workload-name: acme-catalog
        conventions.carto.run/framework: spring-boot
        services.conventions.carto.run/postgres: workload
        tanzu.app.live.view: "true"
        tanzu.app.live.view.application.actuator.path: actuator
        tanzu.app.live.view.application.actuator.port: "8080"
        tanzu.app.live.view.application.flavours: spring-boot
        tanzu.app.live.view.application.name: acme-catalog
    spec:
      containers:
      - env:
        - name: spring.mvc.static-path-pattern
          value: /static/images/**
        - name: spring.web.resources.cache.cachecontrol.max-age
          value: "3600"
        - name: spring.web.resources.cache.cachecontrol.cache-public
          value: "true"
        - name: JAVA_TOOL_OPTIONS
          value: -Dmanagement.endpoint.health.probes.add-additional-paths="true" -Dmanagement.health.probes.enabled="true" -Dserver.port="8080" -Dserver.shutdown.grace-period="24s"
        image: tapdemoacr.azurecr.io/tap-packages141/build-service/acme-catalog-tap-workload@sha256:7ec91665dc825518bb192173f8c76a974435e055b37e3bf1e744bc79e4319ecf
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTP
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
        resources: {}
        securityContext:
          runAsUser: 1000
      serviceAccountName: default
---
apiVersion: v1
kind: Service
metadata:
  name: acme-catalog
  labels:
    app.kubernetes.io/part-of: acme-fitness-store
    apps.tanzu.vmware.com/has-tests: "false"
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/component: run
    carto.run/workload-name: acme-catalog
spec:
  selector:
    app.kubernetes.io/component: run
    app.kubernetes.io/part-of: acme-fitness-store
    apps.tanzu.vmware.com/auto-configure-actuators: "false"
    apps.tanzu.vmware.com/has-tests: "false"
    apps.tanzu.vmware.com/workload-type: server
    carto.run/workload-name: acme-catalog
    conventions.carto.run/framework: spring-boot
    services.conventions.carto.run/postgres: workload
    tanzu.app.live.view: "true"
    tanzu.app.live.view.application.actuator.path: actuator
    tanzu.app.live.view.application.actuator.port: "8080"
    tanzu.app.live.view.application.flavours: spring-boot
    tanzu.app.live.view.application.name: acme-catalog
  ports:
  - targetPort: 8080
    port: 8080
    name: "8080"
  - targetPort: 8080
    port: 80
    name: http

